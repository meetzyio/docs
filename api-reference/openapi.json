{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Meetzy",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "Private"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://ai.meetzy.io"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/call": {
      "post": {
        "description": "API that start a call using a pre-trained playbook.",
        "requestBody": {
          "description": "Params to execute the call",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Call"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Call response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Call"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Call": {
        "required": [
          "phone",
          "playbook_id"
          
        ],
        "type": "object",
        "properties": {
          "phone": {
            "description": "The phone to call with country prefix (e.g. +34600000000)",
            "type": "string"
          },
          "playbook_id": {
            "description": "The id of the playbook",
            "type": "string"
          },
          "voice_id": {
            "description": "The number of the voice to use (values: 1, 2, 3, 4, 5, random) - Default 3",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}